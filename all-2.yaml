openapi: 3.0.2
info:
  title: OpenSearch
  version: '2021-11-23'
paths:
  /:
    get:
      description: Returns whether the cluster is running.
      operationId: GetPingCluster
      responses:
        '200':
          description: GetPingCluster 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPingClusterResponseContent'
  /_cat/indices:
    get:
      description: 'Returns information about indices: number of primaries and replicas, document counts, disk size, etc.'
      operationId: GetCatIndices
      parameters:
        - name: bytes
          in: query
          schema:
            type: number
            nullable: true
        - name: expand_wildcards
          in: query
          schema:
            $ref: '#/components/schemas/ExpandWildcards'
        - name: health
          in: query
          schema:
            $ref: '#/components/schemas/HealthStatus'
        - name: include_unloaded_segments
          in: query
          schema:
            type: boolean
            nullable: true
        - name: pri
          in: query
          schema:
            type: boolean
            nullable: true
        - name: master_timeout
          in: query
          schema:
            type: string
            pattern: ^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$
        - name: timeout
          in: query
          schema:
            type: string
            pattern: ^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$
      responses:
        '200':
          description: GetCatIndices 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCatIndicesOutputPayload'
  /_cat/indices/{index}:
    get:
      description: 'Returns information about indices: number of primaries and replicas, document counts, disk size, etc.'
      operationId: GetCatIndicesWithIndex
      parameters:
        - name: index
          in: path
          schema:
            type: string
            pattern: ^[^+_\-\.][^\\, /*?"<>| ,#\nA-Z]+$
          required: true
          example: books
        - name: bytes
          in: query
          schema:
            type: number
            nullable: true
        - name: expand_wildcards
          in: query
          schema:
            $ref: '#/components/schemas/ExpandWildcards'
        - name: health
          in: query
          schema:
            $ref: '#/components/schemas/HealthStatus'
        - name: include_unloaded_segments
          in: query
          schema:
            type: boolean
            nullable: true
        - name: pri
          in: query
          schema:
            type: boolean
            nullable: true
        - name: master_timeout
          in: query
          schema:
            type: string
            pattern: ^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$
        - name: timeout
          in: query
          schema:
            type: string
            pattern: ^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$
      responses:
        '200':
          description: GetCatIndicesWithIndex 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCatIndicesWithIndexOutputPayload'
  /_cat/nodes:
    get:
      description: Returns basic statistics about performance of cluster nodes.
      operationId: GetCatNodes
      parameters:
        - name: bytes
          in: query
          schema:
            type: number
            nullable: true
        - name: full_id
          in: query
          schema:
            type: boolean
            nullable: true
        - name: local
          in: query
          schema:
            type: boolean
            nullable: true
        - name: master_timeout
          in: query
          schema:
            type: string
            pattern: ^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$
        - name: timeout
          in: query
          schema:
            type: string
            pattern: ^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$
        - name: include_unloaded_segments
          in: query
          schema:
            type: boolean
            nullable: true
      responses:
        '200':
          description: GetCatNodes 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCatNodesOutputPayload'
  /_cluster/settings:
    get:
      description: Returns cluster settings.
      operationId: GetClusterSettings
      parameters:
        - name: flat_settings
          in: query
          schema:
            type: boolean
            nullable: true
        - name: include_defaults
          in: query
          schema:
            type: boolean
            nullable: true
        - name: master_timeout
          in: query
          schema:
            type: string
            pattern: ^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$
        - name: timeout
          in: query
          schema:
            type: string
            pattern: ^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$
      responses:
        '200':
          description: GetClusterSettings 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClusterSettingsResponseContent'
    put:
      description: Updates the cluster settings.
      operationId: PutUpdateClusterSettings
      parameters:
        - name: flat_settings
          in: query
          schema:
            type: boolean
            nullable: true
        - name: include_defaults
          in: query
          schema:
            type: boolean
            nullable: true
        - name: master_timeout
          in: query
          schema:
            type: string
            pattern: ^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$
        - name: timeout
          in: query
          schema:
            type: string
            pattern: ^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$
      responses:
        '200':
          description: PutUpdateClusterSettings 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutUpdateClusterSettingsResponseContent'
  # /_mapping:
  #   put:
  #     description: The put mapping API operation lets you add new mappings and fields to an index.
  #     operationId: PutIndexMapping
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/PutIndexMappingRequestContent'
  #     parameters:
  #       - name: allow_no_indices
  #         in: query
  #         schema:
  #           type: boolean
  #           nullable: true
  #       - name: expand_wildcards
  #         in: query
  #         schema:
  #           $ref: '#/components/schemas/ExpandWildcards'
  #       - name: ignore_unavailable
  #         in: query
  #         schema:
  #           type: boolean
  #           nullable: true
  #       - name: include_type_name
  #         in: query
  #         schema:
  #           type: boolean
  #           nullable: true
  #       - name: master_timeout
  #         in: query
  #         schema:
  #           type: string
  #           pattern: ^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$
  #       - name: timeout
  #         in: query
  #         schema:
  #           type: string
  #           pattern: ^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$
  #       - name: write_index_only
  #         in: query
  #         schema:
  #           type: boolean
  #           nullable: true
  #     responses:
  #       '200':
  #         description: PutIndexMapping 200 response
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/PutIndexMappingResponseContent'
  # /_search:
  #   post:
  #     description: Returns results matching a query.
  #     operationId: PostSearch
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/PostSearchRequestContent'
  #     parameters:
  #       - name: allow_no_indices
  #         in: query
  #         schema:
  #           type: boolean
  #           nullable: true
  #       - name: allow_partial_search_results
  #         in: query
  #         schema:
  #           type: boolean
  #           nullable: true
  #       - name: analyzer
  #         in: query
  #         schema:
  #           type: string
  #       - name: analyze_wildcard
  #         in: query
  #         schema:
  #           type: boolean
  #           nullable: true
  #       - name: batched_reduce_size
  #         in: query
  #         schema:
  #           type: number
  #           format: int32
  #           nullable: true
  #       - name: ccs_minimize_roundtrips
  #         in: query
  #         schema:
  #           type: boolean
  #           nullable: true
  #       - name: default_operator
  #         in: query
  #         schema:
  #           $ref: '#/components/schemas/DefaultOperator'
  #       - name: df
  #         in: query
  #         schema:
  #           type: string
  #       - name: docvalue_fields
  #         in: query
  #         schema:
  #           type: string
  #       - name: expand_wildcards
  #         in: query
  #         schema:
  #           $ref: '#/components/schemas/ExpandWildcards'
  #       - name: explain
  #         in: query
  #         schema:
  #           type: boolean
  #           nullable: true
  #       - name: from
  #         in: query
  #         schema:
  #           type: number
  #           format: int32
  #           nullable: true
  #       - name: ignore_throttled
  #         in: query
  #         schema:
  #           type: boolean
  #           nullable: true
  #       - name: ignore_unavailable
  #         in: query
  #         schema:
  #           type: boolean
  #           nullable: true
  #       - name: lenient
  #         in: query
  #         schema:
  #           type: boolean
  #           nullable: true
  #       - name: max_concurrent_shard_requests
  #         in: query
  #         schema:
  #           type: number
  #           format: int64
  #           nullable: true
  #       - name: pre_filter_shard_size
  #         in: query
  #         schema:
  #           type: number
  #           format: int64
  #           nullable: true
  #       - name: preference
  #         in: query
  #         schema:
  #           type: string
  #       - name: q
  #         in: query
  #         schema:
  #           type: string
  #       - name: request_cache
  #         in: query
  #         schema:
  #           type: boolean
  #           nullable: true
  #       - name: rest_total_hits_as_int
  #         in: query
  #         schema:
  #           type: boolean
  #           nullable: true
  #       - name: routing
  #         in: query
  #         schema:
  #           type: string
  #       - name: scroll
  #         in: query
  #         schema:
  #           type: string
  #           pattern: ^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$
  #       - name: search_type
  #         in: query
  #         schema:
  #           $ref: '#/components/schemas/SearchType'
  #       - name: seq_no_primary_term
  #         in: query
  #         schema:
  #           type: boolean
  #           nullable: true
  #       - name: size
  #         in: query
  #         schema:
  #           type: number
  #           format: int32
  #           nullable: true
  #       - name: sort
  #         in: query
  #         style: form
  #         schema:
  #           type: array
  #           items:
  #             type: string
  #         explode: true
  #       - name: source
  #         in: query
  #         schema:
  #           type: string
  #       - name: source_excludes
  #         in: query
  #         style: form
  #         schema:
  #           type: array
  #           items:
  #             type: string
  #         explode: true
  #       - name: source_includes
  #         in: query
  #         style: form
  #         schema:
  #           type: array
  #           items:
  #             type: string
  #         explode: true
  #       - name: stats
  #         in: query
  #         schema:
  #           type: string
  #       - name: stored_fields
  #         in: query
  #         schema:
  #           type: boolean
  #           nullable: true
  #       - name: suggest_field
  #         in: query
  #         schema:
  #           type: string
  #       - name: suggest_mode
  #         in: query
  #         schema:
  #           $ref: '#/components/schemas/SuggestMode'
  #       - name: suggest_size
  #         in: query
  #         schema:
  #           type: number
  #           format: int64
  #           nullable: true
  #       - name: suggest_text
  #         in: query
  #         schema:
  #           type: string
  #       - name: terminate_after
  #         in: query
  #         schema:
  #           type: number
  #           format: int32
  #           nullable: true
  #       - name: timeout
  #         in: query
  #         schema:
  #           type: string
  #           pattern: ^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$
  #       - name: track_scores
  #         in: query
  #         schema:
  #           type: boolean
  #           nullable: true
  #       - name: track_total_hits
  #         in: query
  #         schema:
  #           type: number
  #           format: int32
  #           nullable: true
  #       - name: typed_keys
  #         in: query
  #         schema:
  #           type: boolean
  #           nullable: true
  #       - name: version
  #         in: query
  #         schema:
  #           type: boolean
  #           nullable: true
  #     responses:
  #       '200':
  #         description: PostSearch 200 response
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/PostSearchResponseContent'
  /{index}:
    delete:
      description: Removes a document from the index.
      operationId: DeleteIndex
      parameters:
        - name: index
          in: path
          schema:
            type: string
            pattern: ^[^+_\-\.][^\\, /*?"<>| ,#\nA-Z]+$
          required: true
          example: books
        - name: expand_wildcards
          in: query
          schema:
            $ref: '#/components/schemas/ExpandWildcards'
        - name: ignore_unavailable
          in: query
          schema:
            type: boolean
            nullable: true
        - name: master_timeout
          in: query
          schema:
            type: string
            pattern: ^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$
        - name: timeout
          in: query
          schema:
            type: string
            pattern: ^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$
      responses:
        '200':
          description: DeleteIndex 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteIndexResponseContent'
    put:
      description: Creates index mappings.
      operationId: PutCreateIndex
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutCreateIndexRequestContent'
      parameters:
        - name: index
          in: path
          schema:
            type: string
            pattern: ^[^+_\-\.][^\\, /*?"<>| ,#\nA-Z]+$
          required: true
          example: books
        - name: include_type_name
          in: query
          schema:
            type: boolean
            nullable: true
        - name: wait_for_active_shards
          in: query
          schema:
            type: string
        - name: master_timeout
          in: query
          schema:
            type: string
            pattern: ^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$
        - name: timeout
          in: query
          schema:
            type: string
            pattern: ^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$
      responses:
        '200':
          description: PutCreateIndex 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutCreateIndexResponseContent'
  /{index}/_doc/{id}:
    get:
      description: Returns a document
      operationId: GetDocumentDoc
      parameters:
        - name: index
          in: path
          schema:
            type: string
            pattern: ^[^+_\-\.][^\\, /*?"<>| ,#\nA-Z]+$
          required: true
          example: books
        - name: id
          in: path
          schema:
            type: string
          required: true
          example: 1
        - name: preference
          in: query
          schema:
            type: string
        - name: realtime
          in: query
          schema:
            type: boolean
            nullable: true
        - name: refresh
          in: query
          schema:
            type: boolean
            nullable: true
        - name: routing
          in: query
          schema:
            type: string
        - name: stored_fields
          in: query
          schema:
            type: boolean
            nullable: true
        - name: _source
          in: query
          schema:
            type: string
        - name: _source_excludes
          in: query
          schema:
            type: string
        - name: _source_includes
          in: query
          schema:
            type: string
        - name: version
          in: query
          schema:
            type: number
            format: int32
            nullable: true
        - name: version_type
          in: query
          schema:
            $ref: '#/components/schemas/VersionType'
      responses:
        '200':
          description: GetDocumentDoc 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDocumentDocResponseContent'
  # /{index}/_mapping:
  #   put:
  #     description: The put mapping API operation lets you add new mappings and fields to an index.
  #     operationId: PutIndexMappingWithIndex
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/PutIndexMappingWithIndexRequestContent'
  #     parameters:
  #       - name: index
  #         in: path
  #         schema:
  #           type: string
  #           pattern: ^[^+_\-\.][^\\, /*?"<>| ,#\nA-Z]+$
  #         required: true
  #         example: books
  #       - name: allow_no_indices
  #         in: query
  #         schema:
  #           type: boolean
  #           nullable: true
  #       - name: expand_wildcards
  #         in: query
  #         schema:
  #           $ref: '#/components/schemas/ExpandWildcards'
  #       - name: ignore_unavailable
  #         in: query
  #         schema:
  #           type: boolean
  #           nullable: true
  #       - name: include_type_name
  #         in: query
  #         schema:
  #           type: boolean
  #           nullable: true
  #       - name: master_timeout
  #         in: query
  #         schema:
  #           type: string
  #           pattern: ^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$
  #       - name: timeout
  #         in: query
  #         schema:
  #           type: string
  #           pattern: ^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$
  #       - name: write_index_only
  #         in: query
  #         schema:
  #           type: boolean
  #           nullable: true
  #     responses:
  #       '200':
  #         description: PutIndexMappingWithIndex 200 response
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/PutIndexMappingWithIndexResponseContent'
  # /{index}/_search:
  #   post:
  #     description: Returns results matching a query.
  #     operationId: PostSearchWithIndex
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/PostSearchWithIndexRequestContent'
  #     parameters:
  #       - name: index
  #         in: path
  #         schema:
  #           type: string
  #           pattern: ^[^+_\-\.][^\\, /*?"<>| ,#\nA-Z]+$
  #         required: true
  #         example: books
  #       - name: allow_no_indices
  #         in: query
  #         schema:
  #           type: boolean
  #           nullable: true
  #       - name: allow_partial_search_results
  #         in: query
  #         schema:
  #           type: boolean
  #           nullable: true
  #       - name: analyzer
  #         in: query
  #         schema:
  #           type: string
  #       - name: analyze_wildcard
  #         in: query
  #         schema:
  #           type: boolean
  #           nullable: true
  #       - name: batched_reduce_size
  #         in: query
  #         schema:
  #           type: number
  #           format: int32
  #           nullable: true
  #       - name: ccs_minimize_roundtrips
  #         in: query
  #         schema:
  #           type: boolean
  #           nullable: true
  #       - name: default_operator
  #         in: query
  #         schema:
  #           $ref: '#/components/schemas/DefaultOperator'
  #       - name: df
  #         in: query
  #         schema:
  #           type: string
  #       - name: docvalue_fields
  #         in: query
  #         schema:
  #           type: string
  #       - name: expand_wildcards
  #         in: query
  #         schema:
  #           $ref: '#/components/schemas/ExpandWildcards'
  #       - name: explain
  #         in: query
  #         schema:
  #           type: boolean
  #           nullable: true
  #       - name: from
  #         in: query
  #         schema:
  #           type: number
  #           format: int32
  #           nullable: true
  #       - name: ignore_throttled
  #         in: query
  #         schema:
  #           type: boolean
  #           nullable: true
  #       - name: ignore_unavailable
  #         in: query
  #         schema:
  #           type: boolean
  #           nullable: true
  #       - name: lenient
  #         in: query
  #         schema:
  #           type: boolean
  #           nullable: true
  #       - name: max_concurrent_shard_requests
  #         in: query
  #         schema:
  #           type: number
  #           format: int64
  #           nullable: true
  #       - name: pre_filter_shard_size
  #         in: query
  #         schema:
  #           type: number
  #           format: int64
  #           nullable: true
  #       - name: preference
  #         in: query
  #         schema:
  #           type: string
  #       - name: q
  #         in: query
  #         schema:
  #           type: string
  #       - name: request_cache
  #         in: query
  #         schema:
  #           type: boolean
  #           nullable: true
  #       - name: rest_total_hits_as_int
  #         in: query
  #         schema:
  #           type: boolean
  #           nullable: true
  #       - name: routing
  #         in: query
  #         schema:
  #           type: string
  #       - name: scroll
  #         in: query
  #         schema:
  #           type: string
  #           pattern: ^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$
  #       - name: search_type
  #         in: query
  #         schema:
  #           $ref: '#/components/schemas/SearchType'
  #       - name: seq_no_primary_term
  #         in: query
  #         schema:
  #           type: boolean
  #           nullable: true
  #       - name: size
  #         in: query
  #         schema:
  #           type: number
  #           format: int32
  #           nullable: true
  #       - name: sort
  #         in: query
  #         style: form
  #         schema:
  #           type: array
  #           items:
  #             type: string
  #         explode: true
  #       - name: source
  #         in: query
  #         schema:
  #           type: string
  #       - name: source_excludes
  #         in: query
  #         style: form
  #         schema:
  #           type: array
  #           items:
  #             type: string
  #         explode: true
  #       - name: source_includes
  #         in: query
  #         style: form
  #         schema:
  #           type: array
  #           items:
  #             type: string
  #         explode: true
  #       - name: stats
  #         in: query
  #         schema:
  #           type: string
  #       - name: stored_fields
  #         in: query
  #         schema:
  #           type: boolean
  #           nullable: true
  #       - name: suggest_field
  #         in: query
  #         schema:
  #           type: string
  #       - name: suggest_mode
  #         in: query
  #         schema:
  #           $ref: '#/components/schemas/SuggestMode'
  #       - name: suggest_size
  #         in: query
  #         schema:
  #           type: number
  #           format: int64
  #           nullable: true
  #       - name: suggest_text
  #         in: query
  #         schema:
  #           type: string
  #       - name: terminate_after
  #         in: query
  #         schema:
  #           type: number
  #           format: int32
  #           nullable: true
  #       - name: timeout
  #         in: query
  #         schema:
  #           type: string
  #           pattern: ^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$
  #       - name: track_scores
  #         in: query
  #         schema:
  #           type: boolean
  #           nullable: true
  #       - name: track_total_hits
  #         in: query
  #         schema:
  #           type: number
  #           format: int32
  #           nullable: true
  #       - name: typed_keys
  #         in: query
  #         schema:
  #           type: boolean
  #           nullable: true
  #       - name: version
  #         in: query
  #         schema:
  #           type: boolean
  #           nullable: true
  #     responses:
  #       '200':
  #         description: PostSearchWithIndex 200 response
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/PostSearchWithIndexResponseContent'
  /{index}/_source/{id}:
    get:
      description: Returns a document.
      operationId: GetDocumentSource
      parameters:
        - name: index
          in: path
          schema:
            type: string
            pattern: ^[^+_\-\.][^\\, /*?"<>| ,#\nA-Z]+$
          required: true
          example: books
        - name: id
          in: path
          schema:
            type: string
          required: true
          example: 1
        - name: preference
          in: query
          schema:
            type: string
        - name: realtime
          in: query
          schema:
            type: boolean
            nullable: true
        - name: refresh
          in: query
          schema:
            type: boolean
            nullable: true
        - name: routing
          in: query
          schema:
            type: string
        - name: stored_fields
          in: query
          schema:
            type: boolean
            nullable: true
        - name: _source
          in: query
          schema:
            type: string
        - name: _source_excludes
          in: query
          schema:
            type: string
        - name: _source_includes
          in: query
          schema:
            type: string
        - name: version
          in: query
          schema:
            type: number
            format: int32
            nullable: true
        - name: version_type
          in: query
          schema:
            $ref: '#/components/schemas/VersionType'
      responses:
        '200':
          description: GetDocumentSource 200 response
components:
  schemas:
    DefaultOperator:
      type: string
      enum:
        - AND
        - OR
    DeleteIndexResponseContent:
      type: object
      properties:
        acknowledged:
          type: boolean
          nullable: true
    ExpandWildcards:
      type: string
      enum:
        - all
        - open
        - closed
        - hidden
        - none
    GetCatIndicesOutputPayload: {}
    GetCatIndicesWithIndexOutputPayload: {}
    GetCatNodesOutputPayload: {}
    GetClusterSettingsResponseContent:
      type: object
      properties:
        persistent:
          $ref: '#/components/schemas/UserDefinedValueMap'
        transient:
          $ref: '#/components/schemas/UserDefinedValueMap'
        defaults:
          $ref: '#/components/schemas/UserDefinedValueMap'  
          example: true
    GetDocumentDocResponseContent:
      type: object
      properties:
        _index:
          type: string
          pattern: ^[^+_\-\.][^\\, /*?"<>| ,#\nA-Z]+$
        _type:
          type: string
        _id:
          type: string
        version:
          type: number
          format: int32
          nullable: true
        seq_no:
          type: number
          format: int64
          nullable: true
        primary_term:
          type: number
          format: int64
          nullable: true
        found:
          type: boolean
          nullable: true
        routing:
          type: string
        source:
          $ref: '#/components/schemas/UserDefinedValueMap'
      required:
        - _id
        - _index
        - _type
        - found
      example:
        _id: 1
        _index: books
    GetPingClusterResponseContent:
      type: object
      properties:
        name:
          type: string
        cluster_name:
          type: string
        cluster_uuid:
          type: string
        version:
          $ref: '#/components/schemas/intermediateStructure'
        tagline:
          type: string
    HealthStatus:
      type: string
      enum:
        - green
        - yellow
        - red
    Hits:
      type: object
      properties:
        _index:
          type: string
        _type:
          type: string
        _id:
          type: string
        _score:
          type: number
          format: float
          nullable: true
        _source: {}
        fields: {}
    HitsMetadata:
      type: object
      properties:
        total:
          $ref: '#/components/schemas/Total'
        max_score:
          type: number
          format: double
          nullable: true
        hits:
          $ref: '#/components/schemas/Hits'
    PostSearchRequestContent:
      type: object
      properties:
        docvalue_fields:
          type: string
        explain:
          type: boolean
          nullable: true
        from:
          type: number
          format: int32
          nullable: true
        seq_no_primary_term:
          type: boolean
          nullable: true
        size:
          type: number
          format: int32
          nullable: true
        source:
          type: string
        stats:
          type: string
        terminate_after:
          type: number
          format: int32
          nullable: true
        timeout:
          type: string
          pattern: ^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$
        version:
          type: boolean
          nullable: true
        fields:
          type: array
          items:
            type: string
        min_score:
          type: number
          format: int32
          nullable: true
        indices_boost:
          type: array
          items: {}
        query:
          $ref: '#/components/schemas/UserDefinedObjectStructure'
    PostSearchResponseContent:
      type: object
      properties:
        _scroll_id:
          type: string
        took:
          type: number
          format: int64
          nullable: true
        timed_out:
          type: boolean
          nullable: true
        _shards:
          $ref: '#/components/schemas/ShardStatistics'
        hits:
          $ref: '#/components/schemas/HitsMetadata'
    PostSearchWithIndexRequestContent:
      type: object
      properties:
        docvalue_fields:
          type: string
        explain:
          type: boolean
          nullable: true
        from:
          type: number
          format: int32
          nullable: true
        seq_no_primary_term:
          type: boolean
          nullable: true
        size:
          type: number
          format: int32
          nullable: true
        source:
          type: string
        stats:
          type: string
        terminate_after:
          type: number
          format: int32
          nullable: true
        timeout:
          type: string
          pattern: ^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$
        version:
          type: boolean
          nullable: true
        fields:
          type: array
          items:
            type: string
        min_score:
          type: number
          format: int32
          nullable: true
        indices_boost:
          type: array
          items: {}
        query:
          $ref: '#/components/schemas/UserDefinedObjectStructure'
    PostSearchWithIndexResponseContent:
      type: object
      properties:
        index:
          type: string
          pattern: ^[^+_\-\.][^\\, /*?"<>| ,#\nA-Z]+$
        _scroll_id:
          type: string
        took:
          type: number
          format: int64
          nullable: true
        timed_out:
          type: boolean
          nullable: true
        _shards:
          $ref: '#/components/schemas/ShardStatistics'
        hits:
          $ref: '#/components/schemas/HitsMetadata'
      required:
        - index
      example: 
        index: books  
    PutCreateIndexRequestContent:
      type: object
      properties:
        aliases:
          $ref: '#/components/schemas/UserDefinedValueMap'
        mapping:
          $ref: '#/components/schemas/UserDefinedValueMap'
        settings:
          $ref: '#/components/schemas/UserDefinedValueMap'
    PutCreateIndexResponseContent:
      type: object
      properties:
        index:
          type: string
          pattern: ^[^+_\-\.][^\\, /*?"<>| ,#\nA-Z]+$
        shards_acknowledged:
          type: boolean
          nullable: true
        acknowledged:
          type: boolean
          nullable: true
      required:
        - index
        - shards_acknowledged
        - acknowledged
      example: 
        index: books
        shards_acknowledged: true
        acknowledged: true
    PutIndexMappingRequestContent:
      type: object
      properties:
        properties: {}
    PutIndexMappingResponseContent:
      type: object
      properties:
        acknowledged:
          type: boolean
          nullable: true
    PutIndexMappingWithIndexRequestContent:
      type: object
      properties:
        properties: {}
    PutIndexMappingWithIndexResponseContent:
      type: object
      properties:
        acknowledged:
          type: boolean
          nullable: true
    PutUpdateClusterSettingsResponseContent:
      type: object
      properties:
        acknowledged:
          type: boolean
          nullable: true
        persistent:
          $ref: '#/components/schemas/UserDefinedValueMap'
        transient:
          $ref: '#/components/schemas/UserDefinedValueMap'
    Relation:
      type: string
      enum:
        - eq
        - gte
    SearchType:
      type: string
      enum:
        - '0'
        - '1'
    ShardStatistics:
      type: object
      properties:
        total:
          type: number
          format: int32
          nullable: true
        successful:
          type: number
          format: int32
          nullable: true
        skipped:
          type: number
          format: int32
          nullable: true
        failed:
          type: number
          format: int32
          nullable: true
    SuggestMode:
      type: string
      enum:
        - '0'
        - '1'
        - '2'
    Total:
      type: object
      properties:
        value:
          type: number
          format: int32
          nullable: true
        relation:
          $ref: '#/components/schemas/Relation'
    UserDefinedObjectStructure:
      type: object
      properties:
        bool: {}
        boosting: {}
        combined_fields: {}
        constant_score: {}
        dis_max: {}
        distance_feature: {}
        exists: {}
        function_score: {}
        fuzzy:
          $ref: '#/components/schemas/UserDefinedValueMap'
        geo_bounding_box: {}
        geo_distance: {}
        geo_polygon: {}
        geo_shape: {}
        has_child: {}
        has_parent: {}
        ids: {}
        intervals:
          $ref: '#/components/schemas/UserDefinedValueMap'
        knn: {}
        match:
          $ref: '#/components/schemas/UserDefinedValueMap'
        match_all: {}
        match_bool_prefix:
          $ref: '#/components/schemas/UserDefinedValueMap'
        match_none: {}
        match_phrase:
          $ref: '#/components/schemas/UserDefinedValueMap'
        match_phrase_prefix:
          $ref: '#/components/schemas/UserDefinedValueMap'
        more_like_this: {}
        multi_match: {}
        nested: {}
        parent_id: {}
        percolate: {}
        pinned: {}
        prefix:
          $ref: '#/components/schemas/UserDefinedValueMap'
        query_string: {}
        range:
          $ref: '#/components/schemas/UserDefinedValueMap'
        rank_feature: {}
        regexp:
          $ref: '#/components/schemas/UserDefinedValueMap'
        script: {}
        script_score: {}
        shape: {}
        simple_query_string: {}
        span_containing: {}
        field_masking_span: {}
        span_first: {}
        span_multi: {}
        span_near: {}
        span_not: {}
        span_or: {}
        span_term:
          $ref: '#/components/schemas/UserDefinedValueMap'
        span_within: {}
        term:
          $ref: '#/components/schemas/UserDefinedValueMap'
        terms: {}
        terms_set:
          $ref: '#/components/schemas/UserDefinedValueMap'
        wildcard:
          $ref: '#/components/schemas/UserDefinedValueMap'
        wrapper: {}
    UserDefinedValueMap:
      type: object
      additionalProperties: {}
    VersionType:
      type: string
      enum:
        - internal
        - external
        - external_gte
    intermediateStructure:
      type: object
      properties:
        distribution:
          type: string
        number:
          type: string
        build_type:
          type: string
        build_hash:
          type: string
        build_date:
          type: string
        build_snapshot:
          type: boolean
          nullable: true
        lucene_version:
          type: string
        minimum_wire_compatibility_version:
          type: string
        minimum_index_compatibility_version:
          type: string
