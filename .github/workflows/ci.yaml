name: CI

on: [push, pull_request]

jobs:
  run_tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js 
      uses: actions/setup-node@v1  
    
    - run: sudo npm install dredd --global --unsafe-perm=true --allow-root
    # - run: npm install dredd --global --unsafe-perm=true --allow-root
    - run: npm install node-fetch@2
    - run: npm install hooks
    - run: npm install https
    - run: npm install fs

    - name: Build the stack
      run: |   
        docker-compose up -d

      shell: bash
      working-directory: ./test  

    - name: checking docker command
      run: docker ps -a  
    
    - name: Run script file
      run: |
          docker ps -a  
          export NODE_TLS_REJECT_UNAUTHORIZED=0
          dredd --version
          python driver-code.py          
      shell: bash
      working-directory: ./test

    # - name: Stop containers
    # if: always()
    # run: docker-compose -f "docker-compose.yml" down

        #  chmod +x ./test/driver-code.py
        #  ./test/driver-code.py

        # docker-compose up -d






# name: CI

# on: [push, pull_request]

# jobs:
#   run_tests:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2

#     - name: Using Docker
#       uses: docker-practice/actions-setup-docker@master
#       run: |
#           set -x 
#           docker version
#           docker run --rm hello-world         

#     - name: Use Node.js 
#       uses: actions/setup-node@v1  
    
#     - run: sudo npm install dredd --global --unsafe-perm=true --allow-root
#     - run: npm install node-fetch@2
#     - run: npm install hooks
#     - run: npm install https
#     - run: npm install fs
#     - name: Run script file

#       run: |
#           dredd --version
#           python driver-code.py          
#       shell: bash
#       working-directory: ./test

#         #  chmod +x ./test/driver-code.py
#         #  ./test/driver-code.py        